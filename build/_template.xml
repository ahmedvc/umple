<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Template">

  <!-- ```````````````````````````
    Environment Variables
  ``````````````````````````` -->

  <condition property="is.osx"><os family="mac" /></condition>

  <property name="myenv" value="cc" />
  <import file="_${myenv}.xml" />

  <import file="build.deps.xml" />
  <deps-declare-taskdef />

  <!-- ```````````````````````````
    Clean up and initialize any potential byproduct
  ``````````````````````````` -->

  <target name="template.clean">
    <delete dir="cruise.umple.validator/bin" failonerror="false" />
	<delete dir="cruise.umplificator/bin" failonerror="false" />
    <delete dir="${bin.path}" failonerror="false" />
    <delete dir="${dist.path}" failonerror="false" />
  </target>

  <target name="template.init">
    <mkdir dir="cruise.umple.validator/bin"/>
	<mkdir dir="cruise.umplificator/bin"/>
    <mkdir dir="${bin.path}"/>
    <mkdir dir="${dist.path}"/>
    <mkdir dir="${test.output.path}"/>
  </target>

  <target name="template.setVersion">
    <echo message="Setting Version: ${umple.version}" />
    <replace dir="cruise.umple/src-gen-jet/cruise" token="@UMPLE_VERSION@" value="${umple.version}">
      <include name="**/*.java"/>
    </replace>
    <replace file="cruise.umple/src/UmpleVersion.ump" token="@UMPLE_VERSION@" value="${umple.version}" />
    <replace file="cruise.umple/test/cruise/umple/UmpleConsoleMainTest.java" token="@UMPLE_VERSION@" value="${umple.version}" />
    <replace file="cruise.umple/test/cruise/umple/compiler/UmpleModelTest.java" token="@UMPLE_VERSION@" value="${umple.version}" />
    <!-- <replace file="cruise.umple/src-gen-umple/cruise/umple/compiler/UmpleModel.java" token="@UMPLE_VERSION@" value="${umple.version}" /> -->
    <replace file="cruise.umple.eclipse/META-INF/MANIFEST.MF" token="Bundle-Version: 0.0.1" value="Bundle-Version: ${umple.version}" />
    <replace file="cruise.umple.xtext.ui/META-INF/MANIFEST.MF" token="Bundle-Version: 0.0.1" value="Bundle-Version: ${umple.version}" />
  </target>
  
  <target name="template.resetVersion">
    <echo message="Resetting To Test Version: ${last.version} -> @UMPLE_VERSION@" />
    <replace file="cruise.umple/src-gen-umple/cruise/umple/compiler/UmpleModel.java" token="${last.version}" value="@UMPLE_VERSION@" />
    <replace file="cruise.umple/src/UmpleVersion.ump" token="${umple.version}" value="@UMPLE_VERSION@" />
    <replace file="cruise.umple/test/cruise/umple/UmpleConsoleMainTest.java" token="${umple.version}" value="@UMPLE_VERSION@" />
    <replace file="cruise.umple/test/cruise/umple/compiler/UmpleModelTest.java" token="${umple.version}" value="@UMPLE_VERSION@" />
    <replace file="cruise.umple.eclipse/META-INF/MANIFEST.MF" token="Bundle-Version: ${umple.version}" value="Bundle-Version: 0.0.1" />
    <replace file="cruise.umple.xtext.ui/META-INF/MANIFEST.MF" token="Bundle-Version: ${umple.version}" value="Bundle-Version: 0.0.1" />

    <echo message="Resetting To Last Version: ${umple.version} -> $${last.version}" />
    <replace dir="cruise.umple/src-gen-umple/cruise" token="${umple.version}" value="$${last.version}"><include name="**/*.java"/></replace>
    <replace dir="cruise.umple/src-gen-jet/cruise" token="${umple.version}" value="$${last.version}">
      <include name="**/*.java"/>
    </replace>

    <!-- TODO: UNCOMMENT ONCE RSM IN THE MIX -->
    <!-- 
    <replace file="../cruise.umple.rsm/META-INF/MANIFEST.MF" token="Bundle-Version: ${umple.version}" value="Bundle-Version: 0.0.1" /> 
    -->
  </target>
  
  <target name="template.localVersion">
    <replace dir="cruise.umple/src-gen-umple/cruise" token="${umple.version}" value="@UMPLE_VERSION@">
      <include name="**/*.java"/>
    </replace>
    <replace dir="cruise.umple/src-gen-jet/cruise" token="${umple.version}" value="@UMPLE_VERSION@">
      <include name="**/*.java"/>
    </replace>
  </target>

  <!-- ```````````````````````````
    Test the application
  ``````````````````````````` -->

  <target name="template.test">

    <deps-get-path conf="core" pathid="core.ivy.classpath" />
    <deps-get-path conf="test" pathid="test.ivy.classpath" />

    <junit fork="yes" forkmode="perBatch" haltonfailure="${haltonfailure}" showoutput="${showJunitOutput}" printsummary="${showJunitSummary}" >
      <!-- <jmvarg value="-XstartOnFirstThread"/> -->
      <formatter type="xml" unless="${showJunitOutput}"/>
      <formatter usefile="false" type="brief" if="${showJunitOutput}"/>
      <batchtest fork="yes" todir="${test.output.path}">
         <fileset dir="${project.path}/test">
          <include name="**/${junit}.java"/>
          <exclude name="**/AllTests.java"/>
        </fileset>
      </batchtest>
      <classpath refid="project.classpath"/>
      <classpath refid="core.ivy.classpath"/>
      <classpath refid="test.ivy.classpath"/>
    </junit>

    <junitreport todir="${test.output.path}">
      <fileset dir="${test.output.path}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.output.path}"/>
    </junitreport>
  </target>  


</project>
